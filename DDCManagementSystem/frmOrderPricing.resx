<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBMAAAEAIAD0CQAAFgAAACgAAAAgAAAAJgAAAAEAIAAAAAAAgAkAAMMOAADDDgAAAAAAAAAA
        AABOTk6NQUFB0UFBQdA/Pz/QQEBA0UBAQNFAQEDRPz8/0D4+Ps49PT3NPT09zT09Pcw9PT3MPDw8yjw8
        PMk7OzvIOzs7yTs7O8g7OzvIOzs7yTw8PMo8PDzLPDw8yz09Pcw9PT3MPT09zT4+Ps4+Pj7OPj4+zz8/
        P9BAQEDPTExMm0pKSjw2NjbcUFBQ/3BwcLhAQEB8QEBAfEFBQX1BQUF+QUFBfUFBQX1AQEB9QEBAfUBA
        QH1AQEB8QEBAfD8/P3tAQEB7QEBAfEBAQHxAQEB8QEBAfEFBQX1BQUF+QUFBfkFBQX5BQUB9QUE+e0FB
        QX1BQUF9QUFBmzc3N/JFRUVpAAAAAEJCQlRERETumpqa0vn5+TJKSkoAGxsbABoaGgAaGhoAGxsbABwc
        HAAcHBwAHBwcAB0dHQAdHR0AHh4eAB4eHgAdHR0AHR0dAB0dHQAcHBwAGxsbABoaGgAZGRkAGRkZAEFE
        /wszNv8iAAAAAAcHEQBAQEB5PDw8xFxcXBV3d3cAg4ODAz8/P3BISEj3oKCgy+3t7S3Pz88A////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAISTvZhYZ79MuMPchU1NCGTo6OtBCQkJqAAAAAAAAAABjY2MAbGxsBz09PX5KSkr4n5+fx+vr
        6y6+vr4A+Pj4AAAAAAAAAAAAAAAAAKysrACdnZ0AmpqaAHh4eABra2sAX19fAFVVVQBSUlIAUlJSAFJS
        UgBUVFQAVVVVAFNTUwAoKvcmISTyWTQ3/wlAQD5qOjo6zlNTUxmtra0AAAAAAAAAAABaWloAZmZmCDw8
        PH5ISEj3l5eX0OPj40P///8A8PDwAPX19QAAAAAAlpaWAK2trTCqqqpOenp6KWpqaiNdXV0eUlJSG1BQ
        UBpPT08ZUFBQGlFRURtSUlIbUFBQGlNSQxdaWTMVTExJJTk5OcY/Pz95////AAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>